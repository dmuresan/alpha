<?php

namespace Bookshop\BookshopBundle\Entity\Repository;

use Bookshop\BookshopBundle\Entity\Cart;
use Doctrine\ORM\EntityRepository;

/**
 * CartRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CartRepository extends EntityRepository {

    public function getCartForUser($userId, $active = true) {
        $qd = $this->createQueryBuilder('c')
                ->select('c')
                ->where('c.user= :user_id')
                ->setParameter('user_id', $userId);
        if (false === is_null($active))
            $qd->andWhere('c.active = :active')
                    ->setParameter('active', 1);

        return $qd->getQuery()
                        ->getResult();
    }

    public function createCart($user, $em, $items = null) {

        $cart = new Cart();
        $cart->setDate('2000-01-01');
        $cart->setActive(1);
        $cart->setTotal(0);
        $cart->setUserId($user);
        $em->persist($cart);
        $old = $this->getCartForUser($user);
        foreach ($old as $oldcart) {
            $oldcart->setActive(0);
        }
        $em->flush();
         if (!is_null($items)) {
            foreach ($items as $item) {
                
                $item->setCart($cart);
                $em->persist($item);
                $cart->addCartItem($item);
            }
        }
        $em->flush();
    }

}
